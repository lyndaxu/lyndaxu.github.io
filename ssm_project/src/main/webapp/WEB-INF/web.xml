<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>ssm_project</display-name>
  <welcome-file-list>
    <welcome-file>login.html</welcome-file>
  </welcome-file-list>
   <!-- 读取spring配置文件 -->  
    <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath:applicationContext.xml</param-value>  
    </context-param>  
    <!-- 设计路径变量值 -->  
    <context-param>  
        <param-name>webAppRootKey</param-name>  
        <param-value>springmvc.root</param-value>  
    </context-param> 
    <!-- 设置spring组件的bean激活状态 --> 
   <context-param>  
        <param-name>spring.profiles.active</param-name>  
        <param-value>dev</param-value>  
    </context-param>  
    <context-param>  
        <param-name>spring.profiles.default</param-name>  
        <param-value>dev</param-value>  
    </context-param>  
    <context-param>  
        <param-name>spring.liveBeansView.mbeanDomain</param-name>  
        <param-value>dev</param-value>  
    </context-param> 
   <!-- 连接池 启用 Web 监控统计功能    start-->  
   <filter> 
  <filter-name>druidWebStatFilter</filter-name> 
  <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class> 
  <init-param> 
   <param-name>exclusions</param-name> 
   <param-value>/public/*,*.js,*.css,/druid*,*.jsp,*.swf</param-value> 
  </init-param> 
 </filter> 
 <filter-mapping> 
  <filter-name>druidWebStatFilter</filter-name> 
  <url-pattern>/*</url-pattern> 
 </filter-mapping>
   <servlet>  
      <servlet-name>DruidStatView</servlet-name>  
      <!-- 展示监控页面的servlet -->  
      <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>  
     <!--  <init-param>  
        允许访问监控界面的IP  
        <param-name>allow</param-name>  
        <param-value>128.242.127.1/24,128.242.128.1</param-value>  
      </init-param>  
      <init-param>  
        不允许访问监控界面的IP，优先级高于allow配置  
        <param-name>deny</param-name>  
        <param-value>10.139.162.231</param-value>  
      </init-param>   -->
  </servlet>  
  <servlet-mapping>  
      <servlet-name>DruidStatView</servlet-name>  
      <url-pattern>/druid/*</url-pattern>  
  </servlet-mapping>  
    <!-- Spring字符集过滤器 -->  
    <filter>  
        <filter-name>SpringEncodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
        <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>SpringEncodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
   
     <!-- 系统日志配置监听器 -->
     <!--log4j2-->  
    <!--对于log4j2，Servlet2.5以前的版本需要 
    <listener>  
        <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>  
    </listener>  
    <filter>  
        <filter-name>log4jServletFilter</filter-name>  
        <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>  
    </filter>  
    <filter-mapping>  
        <filter-name>log4jServletFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
        <dispatcher>REQUEST</dispatcher>  
        <dispatcher>FORWARD</dispatcher>  
        <dispatcher>INCLUDE</dispatcher>  
        <dispatcher>ERROR</dispatcher>  
    </filter-mapping>  --> 
    <context-param>
        <param-name>log4j.configurationFile</param-name>
        <param-value>classpath:log4j2.xml</param-value>
    </context-param> 
    <!-- request表示该针对每一次HTTP请求都会产生一个新的bean，同时该bean仅在当前HTTP request内有效(Servlet 2.4及以上的web容器) -->
    <listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>  
   
    <!-- springMVC核心配置 -->  
    <servlet>  
        <servlet-name>dispatcherServlet</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <!--spingMVC的配置路径  -->  
            <param-value>classpath:springmvc/spring-mvc.xml</param-value>  
        </init-param>  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <!-- 拦截设置 --> 
    <servlet-mapping>  
        <servlet-name>dispatcherServlet</servlet-name>  
        <url-pattern>*.do</url-pattern>  
    </servlet-mapping>  
    <!-- DispatcherServlet拦截"*.do"这样的有后缀的URL，所以不存在访问不到静态资源的情况，下面的配置可以不加。
    	但是如果DispatcherServlet拦截是“/”,就要加可以到访问静态资源的配置 -->
     <!-- <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
     <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>
     <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.woff2</url-pattern>
    </servlet-mapping>
     <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>
     <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.woff</url-pattern>
    </servlet-mapping>
     <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.gif</url-pattern>
    </servlet-mapping> -->
    
    <!-- 过滤器（拦截器），查看用户是否登陆过，未登录禁止访问页面 --> 
    <filter>
	    <filter-name>AuthFilter</filter-name>
	    <filter-class>com.liu.filterUtil.AuthFilter</filter-class>
 	</filter>
	<filter-mapping>
	    <filter-name>AuthFilter</filter-name>
	    <url-pattern>/*</url-pattern>
    </filter-mapping>
  
  <!-- 错误跳转页面 --> 
    <error-page>  
        <!-- 路径不正确 -->  
        <error-code>404</error-code>  
        <location>/error/404.html</location>  
    </error-page>  
    <error-page>  
        <!-- 没有访问权限，访问被禁止 -->  
        <error-code>405</error-code>  
        <location>/error/500.html</location>  
    </error-page>  
</web-app>